{"version":3,"file":"app.js","sourceRoot":"","sources":["../../src/app/app.ts"],"names":[],"mappings":"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","sourcesContent":["export async function DocReady(): Promise<void> {\r\n    const result = new Promise<void>((resolve, reject) => {\r\n        document.addEventListener(\"readystatechange\", () => {\r\n            if (document.readyState === \"complete\") {\r\n\r\n                    resolve();\r\n  \r\n            }\r\n        });\r\n    });\r\n    return result;\r\n}\r\n\r\nexport async function AwaitAnimationFrame(): Promise<void> {\r\n    const result = new Promise<void>((resolve, reject) => {\r\n        requestAnimationFrame(() => {\r\n            resolve();\r\n        });\r\n    });\r\n    return result;\r\n}\r\n\r\nexport function Guid() {\r\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'\r\n        .replace(/[xy]/g, function (c) {\r\n            const r = Math.random() * 16 | 0,\r\n                v = c == 'x' ? r : (r & 0x3 | 0x8);\r\n            return v.toString(16);\r\n        });\r\n}\r\n\r\ndeclare interface MenuLike {\r\n    populatebase(): void;\r\n    addItem(item: string, eventValue: object);\r\n}\r\n\r\n\r\n\r\nexport class EventPipe {\r\n    private subscribers = new Map<string, Array<(event: object) => void>>;\r\n    public Subscribe(eventName: string, method: (event: object) => void) {\r\n        if (!this.subscribers.has(eventName)) {\r\n            this.subscribers.set(eventName, []);\r\n        }\r\n\r\n        this.subscribers.get(eventName).push(method);\r\n    }\r\n    public UnSubscribe(eventName: string, method: (event: object) => void) {\r\n        if (!this.subscribers.has(eventName)) {\r\n            console.warn(\"event not found\");\r\n            return;\r\n        }\r\n\r\n        var evt = this.subscribers.get(eventName);\r\n        const index = evt.indexOf(method);\r\n        evt.splice(index, 1, method);\r\n    }\r\n    public Send(eventName: string, event: object) {\r\n        if (!this.subscribers.has(eventName)) {\r\n            console.warn(\"event not found\");\r\n            return;\r\n        }\r\n\r\n        var evt = this.subscribers.get(eventName);\r\n        evt.forEach(n => n(event));\r\n    }\r\n}\r\n\r\n\r\nexport class System {\r\n    public static get Menu() {\r\n        return <MenuLike>(<any>globalThis).Menu;\r\n    }\r\n    public static get EventPipe() {\r\n        if (!<EventPipe>(<any>globalThis).EventPipe) {\r\n            (<any>globalThis).EventPipe = new EventPipe();\r\n        }\r\n            return <EventPipe>(<any>globalThis).EventPipe;\r\n    }\r\n\r\n}\r\n\r\n\r\nexport async function App() {\r\n    await DocReady()\r\n    System.Menu.populatebase();\r\n    System.EventPipe.Subscribe(\"menuEvent\", (event: object) => {\r\n        alert((<{message:string}>event).message);\r\n    });\r\n    System.Menu.addItem(\"test\", { message: \"hillo!\" });\r\n\r\n    const canvas = <HTMLCanvasElement>document.getElementById(\"viewPort\");\r\n    const context = canvas.getContext(\"2d\");\r\n\r\n    const rnd = () => Math.round(Math.random() * 255);\r\n\r\n    for (let y = 0; y < canvas.height; y++) {\r\n        for (let x = 0; x < canvas.width; x++) {\r\n            const color = `rgb(${rnd()}, ${rnd()}, ${rnd()})`;\r\n\r\n            context.fillStyle = color;\r\n            context.fillRect(x, y, 1, 1);\r\n         \r\n        }\r\n    } \r\n} "]}